{"version":3,"sources":["assets/png/logo-white.png","components/Modal/BasicModal/BasicModal.jsx","assets/png/logo.png","utils/validations.js","utils/constants.js","api/auth.js","components/SignUpForm/SignUpForm.jsx","components/SignInForm/SignInForm.jsx","page/SignInSingUp/SignInSingUp.jsx","utils/context.js","App.jsx","reportWebVitals.js","index.js"],"names":["BasicModal","props","show","setShow","children","Modal","className","onHide","centered","size","Header","Title","src","LogoWhiteTwittor","alt","Body","isEmailValid","email","test","String","toLowerCase","API_HOST","TOKEN_KEY","logout","localStorage","removeItem","isUserLogged","token","getItem","jwtDecode","exp","Date","now","isExpiredToken","initialFormValue","name","last_name","mail","password","repeatPassword","SignUpForm","useState","formData","setFormData","signUpLoading","setSignUpLoading","setShowModal","Form","onSubmit","e","preventDefault","validCount","values","some","value","toast","warning","user","url","userTemp","birthdate","params","method","headers","body","JSON","stringify","fetch","then","response","status","json","code","message","result","catch","err","signUpApi","success","error","finally","onChange","target","Group","Row","Col","Control","type","placeholder","defaultValue","Button","variant","Spinner","animation","SingInForm","setRefreshCheckLogin","signInLoading","setSignInLoading","data","login","setItem","SignInSingUp","showModal","contentModal","setContentModal","Container","fluid","LeftComponent","RightComponent","openModal","content","xs","LogoTwittor","icon","faSearch","faUsers","faComment","onClick","AuthContext","createContext","App","setUser","loadUser","setLoadUser","refreshCheckLogin","useEffect","Provider","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3831cc28.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-white.13c88c37.png\";","import React from \"react\";\n\nimport { Modal } from \"react-bootstrap\";\n\nimport LogoWhiteTwittor from \"../../../assets/png/logo-white.png\";\nimport \"./BasicModal.scss\";\n\nexport default function BasicModal(props) {\n  const { show, setShow, children } = props;\n  return (\n    <Modal\n      className=\"basic-modal\"\n      show={show}\n      onHide={() => setShow(false)}\n      centered\n      size=\"lg\"\n    >\n      <Modal.Header>\n        <Modal.Title>\n          <img src={LogoWhiteTwittor} alt=\"Logo\" />\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n    </Modal>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.0d659bb2.png\";","export function isEmailValid(email) {\n  // eslint-disable-next-line no-useless-escape\n  const emailValid =\n    /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n  return emailValid.test(String(email).toLowerCase());\n}\n","export const API_HOST = \"https://go-react-twittor.herokuapp.com\";\nexport const TOKEN_KEY = \"token\";\n","import { API_HOST, TOKEN_KEY } from \"../utils/constants\";\nimport jwtDecode from \"jwt-decode\";\n\nexport function signUpApi(user) {\n  const url = `${API_HOST}/register`;\n  const userTemp = {\n    ...user,\n    mail: user.mail.toLowerCase(),\n    birthdate: new Date(),\n  };\n  delete userTemp.repeatPassword;\n\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userTemp),\n  };\n\n  return fetch(url, params)\n    .then((response) => {\n      if (response.status >= 200 && response.status < 300) {\n        return response.json();\n      }\n      return { code: 404, message: \"Email ya esta registrado\" };\n    })\n    .then((result) => result)\n    .catch((err) => err);\n}\n\nexport function login(user) {\n  const url = `${API_HOST}/login`;\n\n  const data = {\n    ...user,\n    mail: user.mail.toLowerCase(),\n  };\n\n  const params = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  return fetch(url, params)\n    .then((response) => {\n      if (response.status >= 200 && response.status < 300) {\n        return response.json();\n      }\n      return { code: 404, message: \"Email ya esta registrado\" };\n    })\n    .then((result) => result)\n    .catch((err) => err);\n}\n\nexport function logout() {\n  localStorage.removeItem(TOKEN_KEY);\n}\n\nexport function setTokenApi(token) {\n  localStorage.setItem(TOKEN_KEY, token);\n}\nfunction isExpiredToken(token) {\n  const { exp } = jwtDecode(token);\n  const expired = exp * 1000;\n  const timeout = expired - Date.now();\n\n  return timeout <= 0;\n}\n\nexport function isUserLogged() {\n  const token = localStorage.getItem(TOKEN_KEY);\n\n  if (!token) {\n    logout();\n    return null;\n  }\n\n  if (isExpiredToken(token)) {\n    logout();\n  }\n\n  return jwtDecode(token);\n}\n","import React, { useState } from \"react\";\n\nimport { Row, Col, Form, Button, Spinner } from \"react-bootstrap\";\nimport { values, size } from \"lodash\";\nimport { toast } from \"react-toastify\";\n\nimport { isEmailValid } from \"../../utils/validations\";\nimport { signUpApi } from \"../../api/auth\";\n\nimport \"./SignUpForm.scss\";\n\nconst SignUpForm = (props) => {\n  const [formData, setFormData] = useState(initialFormValue());\n  const [signUpLoading, setSignUpLoading] = useState(false);\n\n  const { setShowModal } = props;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let validCount = 0;\n    values(formData).some((value) => {\n      value && validCount++;\n      return null;\n    });\n\n    if (validCount !== size(formData)) {\n      toast.warning(\"Completa todos los campos del formulario\");\n    } else if (!isEmailValid(formData.mail)) {\n      toast.warning(\"E-mail invalido\");\n    } else if (formData.password !== formData.repeatPassword) {\n      toast.warning(\"Las contraseñas no coinciden\");\n    } else if (size(formData.password) < 6) {\n      toast.warning(\"La contraseñas debe tener al menos 6 caracteres\");\n    } else {\n      setSignUpLoading(true);\n      signUpApi(formData)\n        .then((response) => {\n          if (response.code) {\n            toast.warning(response.message);\n          } else {\n            toast.success(\"Registro Exitoso\");\n            setShowModal(false);\n            setFormData(initialFormValue());\n          }\n        })\n        .catch((err) => {\n          toast.error(\"Error en el registro, intentelo mas tarde\");\n        })\n        .finally(() => {\n          setSignUpLoading(false);\n        });\n    }\n  };\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"sign-up-form\">\n      <h2>Crea tu cuenta</h2>\n      <Form onSubmit={onSubmit} onChange={onChange}>\n        <Form.Group>\n          <Row>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Nombre\"\n                defaultValue={formData.name}\n                name=\"name\"\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Apellido\"\n                defaultValue={formData.last_name}\n                name=\"last_name\"\n              />\n            </Col>\n          </Row>\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"E-mail\"\n            defaultValue={formData.mail}\n            name=\"mail\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Row>\n            <Col>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Contraseña\"\n                defaultValue={formData.password}\n                name=\"password\"\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Repetir Contraseña\"\n                defaultValue={formData.repeatPassword}\n                name=\"repeatPassword\"\n              />\n            </Col>\n          </Row>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          {!signUpLoading ? \"Registrate\" : <Spinner animation=\"border\" />}\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nconst initialFormValue = () => {\n  return {\n    name: \"\",\n    last_name: \"\",\n    mail: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n  };\n};\n\nexport default SignUpForm;\n","import React, { useState } from \"react\";\nimport { Form, Button, Spinner } from \"react-bootstrap\";\n\nimport { values, size } from \"lodash\";\nimport { toast } from \"react-toastify\";\n\nimport { isEmailValid } from \"../../utils/validations\";\n\nimport \"./SignInForm.scss\";\nimport { login, setTokenApi } from \"../../api/auth\";\n\nexport default function SingInForm(props) {\n  const { setRefreshCheckLogin } = props;\n  const [formData, setFormData] = useState(initialFormValue());\n  const [signInLoading, setSignInLoading] = useState(false);\n\n  const { setShowModal } = props;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let validCount = 0;\n    values(formData).some((value) => {\n      value && validCount++;\n      return null;\n    });\n\n    if (validCount !== size(formData)) {\n      toast.warning(\"Completa todos los campos del formulario\");\n    } else if (!isEmailValid(formData.mail)) {\n      toast.warning(\"E-mail invalido\");\n    } else {\n      setSignInLoading(true);\n      login(formData)\n        .then((response) => {\n          if (response.code) {\n            toast.warning(response.message);\n          } else {\n            setTokenApi(response.token);\n            setRefreshCheckLogin(true);\n          }\n        })\n        .catch((err) => {\n          toast.error(\"Error en el inicio de sesion, intentelo mas tarde\");\n        })\n        .finally(() => {\n          setSignInLoading(false);\n        });\n    }\n  };\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"sign-in-form\">\n      <h2>Inicia Sesión</h2>\n      <Form onSubmit={onSubmit} onChange={onChange}>\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"E-mail\"\n            defaultValue={formData.mail}\n            name=\"mail\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            defaultValue={formData.password}\n            name=\"password\"\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          {!signInLoading ? \"Iniciar Sesión\" : <Spinner animation=\"border\" />}\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nconst initialFormValue = () => {\n  return {\n    mail: \"\",\n    password: \"\",\n  };\n};\n","import React, { useState } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport BasicModal from \"../../components/Modal/BasicModal\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faUsers,\n  faComment,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport LogoWhiteTwittor from \"../../assets/png/logo-white.png\";\nimport LogoTwittor from \"../../assets/png/logo.png\";\n\nimport \"./SignInSingUp.scss\";\nimport SignUpForm from \"../../components/SignUpForm/SignUpForm\";\nimport SignInForm from \"../../components/SignInForm/SignInForm\";\n\nexport default function SignInSingUp(props) {\n  const { setRefreshCheckLogin } = props;\n  const [showModal, setShowModal] = useState(false);\n  const [contentModal, setContentModal] = useState(null);\n\n  const openModal = (content) => {\n    setShowModal(true);\n    setContentModal(content);\n  };\n\n  return (\n    <>\n      <Container className=\"signin-signup\" fluid>\n        <Row>\n          <LeftComponent />\n          <RightComponent\n            openModal={openModal}\n            setShowModal={setShowModal}\n            setRefreshCheckLogin={setRefreshCheckLogin}\n          />\n        </Row>\n      </Container>\n      <BasicModal show={showModal} setShow={setShowModal}>\n        {contentModal}\n      </BasicModal>\n    </>\n  );\n}\n\nfunction LeftComponent() {\n  return (\n    <Col className=\"signin-signup__left\" xs={6}>\n      <img src={LogoTwittor} alt=\"Twittor\" />\n      <div>\n        <h2>\n          <FontAwesomeIcon icon={faSearch} />\n          Sigue lo que te interesa.\n        </h2>\n        <h2>\n          <FontAwesomeIcon icon={faUsers} />\n          Entérate de qué está hablando la gente.\n        </h2>\n        <h2>\n          <FontAwesomeIcon icon={faComment} />\n          Únete a la conversación.\n        </h2>\n      </div>\n    </Col>\n  );\n}\n\nfunction RightComponent(props) {\n  const { openModal, setShowModal, setRefreshCheckLogin } = props;\n  return (\n    <Col className=\"signin-signup__right\" xs={6}>\n      <div>\n        <img src={LogoWhiteTwittor} alt=\"Twittor\" />\n        <h2>Mira lo que está pasando en el mundo en este momento</h2>\n        <h3>Únete a Twittor hoy mismo.</h3>\n        <Button\n          variant=\"primary\"\n          onClick={() => openModal(<SignUpForm setShowModal={setShowModal} />)}\n        >\n          Regístrate\n        </Button>\n        <Button\n          variant=\"outline-primary\"\n          onClick={() =>\n            openModal(\n              <SignInForm\n                setShowModal={setShowModal}\n                setRefreshCheckLogin={setRefreshCheckLogin}\n              />\n            )\n          }\n        >\n          Inicia Sesión\n        </Button>\n      </div>\n    </Col>\n  );\n}\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext();\n","import React, { useState, useEffect } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport SignInSingUp from \"./page/SignInSingUp\";\nimport { AuthContext } from \"./utils/context\";\nimport { isUserLogged } from \"./api/auth\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [loadUser, setLoadUser] = useState(false);\n  const [refreshCheckLogin, setRefreshCheckLogin] = useState(false);\n\n  useEffect(() => {\n    setUser(isUserLogged());\n    setRefreshCheckLogin(false);\n    setLoadUser(true);\n  }, [refreshCheckLogin]);\n\n  if (!loadUser) {\n    return null;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      <h1>\n        {user ? (\n          <div>\"Logueado\"</div>\n        ) : (\n          <div>\n            <SignInSingUp setRefreshCheckLogin={setRefreshCheckLogin} />\n          </div>\n        )}\n      </h1>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnVisibilityChange\n        draggable\n        pauseOnHover\n      />\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}